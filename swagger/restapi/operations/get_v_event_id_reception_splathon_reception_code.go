// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetVEventIDReceptionSplathonReceptionCodeHandlerFunc turns a function with the right signature into a get v event ID reception splathon reception code handler
type GetVEventIDReceptionSplathonReceptionCodeHandlerFunc func(GetVEventIDReceptionSplathonReceptionCodeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetVEventIDReceptionSplathonReceptionCodeHandlerFunc) Handle(params GetVEventIDReceptionSplathonReceptionCodeParams) middleware.Responder {
	return fn(params)
}

// GetVEventIDReceptionSplathonReceptionCodeHandler interface for that can handle valid get v event ID reception splathon reception code params
type GetVEventIDReceptionSplathonReceptionCodeHandler interface {
	Handle(GetVEventIDReceptionSplathonReceptionCodeParams) middleware.Responder
}

// NewGetVEventIDReceptionSplathonReceptionCode creates a new http.Handler for the get v event ID reception splathon reception code operation
func NewGetVEventIDReceptionSplathonReceptionCode(ctx *middleware.Context, handler GetVEventIDReceptionSplathonReceptionCodeHandler) *GetVEventIDReceptionSplathonReceptionCode {
	return &GetVEventIDReceptionSplathonReceptionCode{Context: ctx, Handler: handler}
}

/*GetVEventIDReceptionSplathonReceptionCode swagger:route GET /v{eventId}/reception/{splathonReceptionCode} reception admin getVEventIdReceptionSplathonReceptionCode

参加者情報取得API

*/
type GetVEventIDReceptionSplathonReceptionCode struct {
	Context *middleware.Context
	Handler GetVEventIDReceptionSplathonReceptionCodeHandler
}

func (o *GetVEventIDReceptionSplathonReceptionCode) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetVEventIDReceptionSplathonReceptionCodeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
