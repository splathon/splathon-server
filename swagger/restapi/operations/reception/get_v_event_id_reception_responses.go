// Code generated by go-swagger; DO NOT EDIT.

package reception

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/splathon/splathon-server/swagger/models"
)

// GetVEventIDReceptionOKCode is the HTTP code returned for type GetVEventIDReceptionOK
const GetVEventIDReceptionOKCode int = 200

/*GetVEventIDReceptionOK Success

swagger:response getVEventIdReceptionOK
*/
type GetVEventIDReceptionOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReceptionResponse `json:"body,omitempty"`
}

// NewGetVEventIDReceptionOK creates GetVEventIDReceptionOK with default headers values
func NewGetVEventIDReceptionOK() *GetVEventIDReceptionOK {

	return &GetVEventIDReceptionOK{}
}

// WithPayload adds the payload to the get v event Id reception o k response
func (o *GetVEventIDReceptionOK) WithPayload(payload *models.ReceptionResponse) *GetVEventIDReceptionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v event Id reception o k response
func (o *GetVEventIDReceptionOK) SetPayload(payload *models.ReceptionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVEventIDReceptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetVEventIDReceptionDefault Generic error

swagger:response getVEventIdReceptionDefault
*/
type GetVEventIDReceptionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVEventIDReceptionDefault creates GetVEventIDReceptionDefault with default headers values
func NewGetVEventIDReceptionDefault(code int) *GetVEventIDReceptionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetVEventIDReceptionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get v event ID reception default response
func (o *GetVEventIDReceptionDefault) WithStatusCode(code int) *GetVEventIDReceptionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get v event ID reception default response
func (o *GetVEventIDReceptionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get v event ID reception default response
func (o *GetVEventIDReceptionDefault) WithPayload(payload *models.Error) *GetVEventIDReceptionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v event ID reception default response
func (o *GetVEventIDReceptionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVEventIDReceptionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
