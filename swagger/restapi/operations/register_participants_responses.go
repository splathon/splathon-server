// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/splathon/splathon-server/swagger/models"
)

// RegisterParticipantsOKCode is the HTTP code returned for type RegisterParticipantsOK
const RegisterParticipantsOKCode int = 200

/*RegisterParticipantsOK Success

swagger:response registerParticipantsOK
*/
type RegisterParticipantsOK struct {
}

// NewRegisterParticipantsOK creates RegisterParticipantsOK with default headers values
func NewRegisterParticipantsOK() *RegisterParticipantsOK {

	return &RegisterParticipantsOK{}
}

// WriteResponse to the client
func (o *RegisterParticipantsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

/*RegisterParticipantsDefault Generic error

swagger:response registerParticipantsDefault
*/
type RegisterParticipantsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterParticipantsDefault creates RegisterParticipantsDefault with default headers values
func NewRegisterParticipantsDefault(code int) *RegisterParticipantsDefault {
	if code <= 0 {
		code = 500
	}

	return &RegisterParticipantsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the register participants default response
func (o *RegisterParticipantsDefault) WithStatusCode(code int) *RegisterParticipantsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the register participants default response
func (o *RegisterParticipantsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the register participants default response
func (o *RegisterParticipantsDefault) WithPayload(payload *models.Error) *RegisterParticipantsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register participants default response
func (o *RegisterParticipantsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterParticipantsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
