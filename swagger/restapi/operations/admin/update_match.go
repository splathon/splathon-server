// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateMatchHandlerFunc turns a function with the right signature into a update match handler
type UpdateMatchHandlerFunc func(UpdateMatchParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMatchHandlerFunc) Handle(params UpdateMatchParams) middleware.Responder {
	return fn(params)
}

// UpdateMatchHandler interface for that can handle valid update match params
type UpdateMatchHandler interface {
	Handle(UpdateMatchParams) middleware.Responder
}

// NewUpdateMatch creates a new http.Handler for the update match operation
func NewUpdateMatch(ctx *middleware.Context, handler UpdateMatchHandler) *UpdateMatch {
	return &UpdateMatch{Context: ctx, Handler: handler}
}

/*UpdateMatch swagger:route PUT /v{eventId}/matches/{matchId} admin updateMatch

UpdateMatch update match API

*/
type UpdateMatch struct {
	Context *middleware.Context
	Handler UpdateMatchHandler
}

func (o *UpdateMatch) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateMatchParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
