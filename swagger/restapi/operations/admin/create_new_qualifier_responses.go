// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/splathon/splathon-server/swagger/models"
)

// CreateNewQualifierOKCode is the HTTP code returned for type CreateNewQualifierOK
const CreateNewQualifierOKCode int = 200

/*CreateNewQualifierOK Success

swagger:response createNewQualifierOK
*/
type CreateNewQualifierOK struct {
}

// NewCreateNewQualifierOK creates CreateNewQualifierOK with default headers values
func NewCreateNewQualifierOK() *CreateNewQualifierOK {

	return &CreateNewQualifierOK{}
}

// WriteResponse to the client
func (o *CreateNewQualifierOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

/*CreateNewQualifierDefault Generic error

swagger:response createNewQualifierDefault
*/
type CreateNewQualifierDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateNewQualifierDefault creates CreateNewQualifierDefault with default headers values
func NewCreateNewQualifierDefault(code int) *CreateNewQualifierDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateNewQualifierDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create new qualifier default response
func (o *CreateNewQualifierDefault) WithStatusCode(code int) *CreateNewQualifierDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create new qualifier default response
func (o *CreateNewQualifierDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create new qualifier default response
func (o *CreateNewQualifierDefault) WithPayload(payload *models.Error) *CreateNewQualifierDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create new qualifier default response
func (o *CreateNewQualifierDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNewQualifierDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
