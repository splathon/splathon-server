// Code generated by go-swagger; DO NOT EDIT.

package result

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/splathon/splathon-server/swagger/models"
)

// GetResultOKCode is the HTTP code returned for type GetResultOK
const GetResultOKCode int = 200

/*GetResultOK Success

swagger:response getResultOK
*/
type GetResultOK struct {

	/*
	  In: Body
	*/
	Payload *models.Results `json:"body,omitempty"`
}

// NewGetResultOK creates GetResultOK with default headers values
func NewGetResultOK() *GetResultOK {

	return &GetResultOK{}
}

// WithPayload adds the payload to the get result o k response
func (o *GetResultOK) WithPayload(payload *models.Results) *GetResultOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get result o k response
func (o *GetResultOK) SetPayload(payload *models.Results) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResultOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetResultDefault Generic error

swagger:response getResultDefault
*/
type GetResultDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetResultDefault creates GetResultDefault with default headers values
func NewGetResultDefault(code int) *GetResultDefault {
	if code <= 0 {
		code = 500
	}

	return &GetResultDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get result default response
func (o *GetResultDefault) WithStatusCode(code int) *GetResultDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get result default response
func (o *GetResultDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get result default response
func (o *GetResultDefault) WithPayload(payload *models.Error) *GetResultDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get result default response
func (o *GetResultDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResultDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
