swagger: "2.0"
info:
  description: "Splathonで使うAPI"
  version: "1.0.0"
  title: "SplathonAPI"
host: "splathon-api-us.appspot.com"
basePath: "/splathon/"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json; charset=utf-8"
tags:
- name: "result"
  description: "リザルト一覧"
- name: "match"
  description: "マッチ"
- name: "ranking"
  description: "予選ランキング"

paths:
  "/v{eventId}/event":
    get:
      description: "Return event data"
      operationId: "getEvent"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Event"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/results":
    get:
      tags:
      - "result"
      description: "リザルト一覧を返す。リザルトと言いつつ終了していない未来のマッチも返す。ゲスト・管理アプリ両方から使う。team_idを指定するとそのチームのみの結果が返ってくる。"
      operationId: "getResult"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: team_id
        in: query
        description: team id
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Results"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/matches/{matchId}":
    get:
      tags:
      - "match"
      description: "マッチの詳細を返す。スコアボードとかで使える。"
      operationId: "getMatch"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: matchId
        in: path
        required: true
        description: match id
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Match"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

    post:
      tags:
      - "match"
      - "admin"
      description: "Update a battle data in the match."
      operationId: "updateBattle"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: matchId
        in: path
        required: true
        description: match id
        type: integer
        format: int64
      - name: battle
        in: body
        required: true
        schema:
          $ref: "#/definitions/Battle"
      responses:
        200:
          description: Success
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/ranking":
    get:
      tags:
      - "ranking"
      description: "予選ランキングを返す。"
      operationId: "getRanking"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Ranking"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/teams":
    get:
      description: "Return team list"
      operationId: "listTeams"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Teams"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      code:
        type: integer
        format: int64

  Results:
    description: "予選/決勝Tのリザルト。予選/決勝Tは同じ構造なのでフラットにできるがクライアントがトーナメント表だせる拡張性持たせるために別フィールドで持つ。"
    type: object
    properties:
      qualifiers:
        type: array
        items:
          $ref: "#/definitions/Round"
      tournament:
        type: array
        items:
          $ref: "#/definitions/Round"

  Round:
    description: "予選/決勝Tラウンド両方扱う。"
    type: object
    required:
      - name
    properties:
      name:
        description: "ラウンド名。e.g. 予選第1ラウンド, 決勝T1回戦, 決勝戦"
        type: string
      round:
        description: "何ラウンドか。i.e. 予選第Nラウンド, 決勝T N回戦"
        type: integer
        format: int32
      rooms:
        type: array
        items:
          $ref: '#/definitions/Room'

  Room:
    description: "Roomごとのマッチ"
    type: object
    required:
      - name
      - matches
    properties:
      # Room ID is needless as client-server I/F?
      id:
        description: "Room ID."
        type: integer
        format: int32
      name:
        type: string
      matches:
        type: array
        items:
          $ref: "#/definitions/Match"

  Match:
    type: object
    required:
      - id
      - teamAlpha
      - teamBravo
    properties:
      id:
        description: "Match ID"
        type: integer
        format: int32
      winner:
        type: string
        description: "勝者がどちらか。または引き分け。"
        enum:
          - "alpha"
          - "bravo"
          - "draw"
      order:
        description: "Room内でのマッチの順番"
        type: integer
        format: int32
      teamAlpha:
        $ref: "#/definitions/Team"
      teamBravo:
        $ref: "#/definitions/Team"
      battles:
        type: array
        items:
          $ref: "#/definitions/Battle"

  Team:
    type: object
    required:
      - id
      - name
    properties:
      id:
        description: "Team ID"
        type: integer
        format: int32
      name:
        type: string
      members:
        type: array
        items:
          $ref: "#/definitions/Member"

  Member:
    type: object
    required:
      - name
    properties:
      id:
        description: "Member ID (Slack ID かも?)"
        type: integer
        format: int32
      name:
        type: string
      icon:
        description: "Slack icon URL"
        type: string

  Battle:
    description: "バトル。勝敗などは決まってない状態のこともある。"
    type: object
    required:
      - order
    properties:
      id:
        description: "Battle ID"
        type: integer
        format: int64
      winner:
        type: string
        description: "勝者がどちらか。"
        enum:
          - "alpha"
          - "bravo"
      order:
        description: "何戦目か"
        type: integer
        format: int32
      rule:
        $ref: "#/definitions/Rule"
      stage:
        $ref: "#/definitions/Stage"

  Ranking:
    description: "予選ランキング"
    type: object
    properties:
      rankings:
        type: array
        items:
          $ref: "#/definitions/Rank"

  Rank:
    type: object
    required:
      - rank
      - team
      - point
    properties:
      rank:
        description: "順位"
        type: integer
        format: int32
      team:
        description: "member も fill される"
        $ref: "#/definitions/Team"
      point:
        description: "勝ち点"
        type: integer
        format: int32
      omwp:
        description: "OMWP (Opponent Match Win Percentage)"
        type: number
      num_of_matches:
        description: "何戦こなしたか。"
        type: integer
        format: int32

  Teams:
    type: object
    properties:
      teams:
        type: array
        items:
          $ref: "#/definitions/Team"

  Event:
    type: object
    required:
      - name
      - numbering
    properties:
      name:
        type: string
      numbering:
        type: integer
        format: int32
      rules:
        type: array
        items:
          $ref: "#/definitions/Rule"
      stages:
        type: array
        items:
          $ref: "#/definitions/Stage"

  Rule:
    type: object
    required:
      - key
    properties:
      key:
        type: string
        description: "Rule key. ref: https://splatoon2.ink/data/locale/ja.json"
        enum:
          - "turf_war"
          - "splat_zones"
          - "tower_control"
          - "rainmaker"
          - "clam_blitz"
      name:
        description: "Localized rule name."
        type: string

  Stage:
    type: object
    required:
      - id
    properties:
      id:
        description: "Stage ID. ref: https://splatoon2.ink/data/locale/ja.json"
        type: integer
        format: int32
      name:
        description: "Localized stage name."
        type: string
