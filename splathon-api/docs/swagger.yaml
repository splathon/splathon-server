swagger: "2.0"
info:
  description: "Splathonで使うAPI"
  version: "1.0.0"
  title: "SplathonAPI"
host: "splathon-api-us.appspot.com"
basePath: "/splathon/"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json; charset=utf-8"
tags:
- name: "result"
  description: "リザルト一覧"
- name: "match"
  description: "マッチ"
- name: "ranking"
  description: "予選ランキング"
- name: "admin"
  description: "管理機能"
- name: "reception"
  description: "受付機能"

paths:
  "/v{eventId}/login":
    post:
      operationId: "login"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: request
        in: body
        required: true
        schema:
          $ref: "#/definitions/LoginRequest"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/event":
    get:
      description: "Return event data"
      operationId: "getEvent"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Event"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/results":
    get:
      tags:
      - "result"
      description: "リザルト一覧を返す。リザルトと言いつつ終了していない未来のマッチも返す。ゲスト・管理アプリ両方から使う。team_idを指定するとそのチームのみの結果が返ってくる。"
      operationId: "getResult"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: team_id
        in: query
        description: team id
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Results"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/matches/{matchId}":
    get:
      tags:
      - "match"
      description: "マッチの詳細を返す。スコアボードとかで使える。"
      operationId: "getMatch"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: matchId
        in: path
        required: true
        description: match id
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Match"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

    post:
      tags:
      - "match"
      - "admin"
      description: "Update a battle data in the match."
      operationId: "updateBattle"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: matchId
        in: path
        required: true
        description: match id
        type: integer
        format: int64
      - name: battle
        in: body
        required: true
        schema:
          $ref: "#/definitions/Battle"
      - name: "X-SPLATHON-API-TOKEN"
        in: header
        type: string
        required: true
      responses:
        200:
          description: Success
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/ranking":
    get:
      tags:
      - "ranking"
      description: "予選ランキングを返す。"
      operationId: "getRanking"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Ranking"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/teams":
    get:
      description: "Return team list"
      operationId: "listTeams"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Teams"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/teams/{team_id}":
    get:
      description: "Return detail team data"
      operationId: "getTeamDetail"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: team_id
        in: path
        required: true
        description: team id
        type: integer
        format: int64
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Team"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/reception":
    get:
      tags:
      - "reception"
      operationId: "getReception"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: "X-SPLATHON-API-TOKEN"
        in: header
        type: string
        required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/ReceptionResponse"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/reception/{splathonReceptionCode}":
    get:
      operationId: "getParticipantsDataForReception"
      description: "参加者情報取得API"
      tags:
      - "reception"
      - "admin"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: splathonReceptionCode
        description: "ReceptionResponse.splathon.code と同じもの(たぶん内部SlackID)."
        in: path
        required: true
        type: string
      - name: "X-SPLATHON-API-TOKEN"
        in: header
        type: string
        required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/ReceptionPartcipantsDataResponse"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

  "/v{eventId}/reception/{splathonReceptionCode}/complete":
    post:
      operationId: "completeReception"
      description: "参加登録API"
      tags:
      - "reception"
      - "admin"
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      - name: splathonReceptionCode
        description: "ReceptionResponse.splathon.code と同じもの(たぶん内部SlackID)."
        in: path
        required: true
        type: string
      - name: "X-SPLATHON-API-TOKEN"
        in: header
        type: string
        required: true
      responses:
        200:
          description: Success
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      code:
        type: integer
        format: int64

  LoginRequest:
    type: object
    required:
      - user_id
      - password
    properties:
      user_id:
        description: "Slack username (https://splathon.slack.com/account/settings#username)"
        type: string
      password:
        type: string

  LoginResponse:
    type: object
    required:
      - token
      - is_admin
    properties:
      token:
        description: "Session API token. Send this token via X-SPLATHON-API-TOKEN HTTP hader. 'X-SPLATHON-API-TOKEN: <token>'"
        type: string
      is_admin:
        description: "管理者かどうか。(e.g. true なら battle data を送信できる。)"
        type: boolean
      team:
        description:
          "所属チーム。観戦だとないこともある。またloginユーザーはSlack
          アカウントを共有している複数の参加者と紐ずいていることもあるが、所属チームは必ず1つ以下。"
        $ref: "#/definitions/Team"

  Results:
    description: "予選/決勝Tのリザルト。予選/決勝Tは同じ構造なのでフラットにできるがクライアントがトーナメント表だせる拡張性持たせるために別フィールドで持つ。"
    type: object
    properties:
      qualifiers:
        type: array
        items:
          $ref: "#/definitions/Round"
      tournament:
        type: array
        items:
          $ref: "#/definitions/Round"

  Round:
    description: "予選/決勝Tラウンド両方扱う。"
    type: object
    required:
      - name
    properties:
      name:
        description: "ラウンド名。e.g. 予選第1ラウンド, 決勝T1回戦, 決勝戦"
        type: string
      round:
        description: "何ラウンドか。i.e. 予選第Nラウンド, 決勝T N回戦"
        type: integer
        format: int32
      rooms:
        type: array
        items:
          $ref: '#/definitions/Room'

  Room:
    description: "Roomごとのマッチ"
    type: object
    required:
      - name
      - matches
    properties:
      # Room ID is needless as client-server I/F?
      id:
        description: "Room ID."
        type: integer
        format: int32
      name:
        type: string
      matches:
        type: array
        items:
          $ref: "#/definitions/Match"

  Match:
    type: object
    required:
      - id
      - teamAlpha
      - teamBravo
    properties:
      id:
        description: "Match ID"
        type: integer
        format: int32
      winner:
        type: string
        description: "勝者がどちらか。または引き分け。"
        enum:
          - "alpha"
          - "bravo"
          - "draw"
      order:
        description: "Room内でのマッチの順番"
        type: integer
        format: int32
      teamAlpha:
        $ref: "#/definitions/Team"
      teamBravo:
        $ref: "#/definitions/Team"
      battles:
        type: array
        items:
          $ref: "#/definitions/Battle"
      round_name:
        type: string
        description: "ラウンド名。e.g. 予選第1ラウンド, 決勝T1回戦, 決勝戦. Match APIから読んだときに埋まっている"

  Team:
    type: object
    required:
      - id
      - name
    properties:
      id:
        description: "Team ID"
        type: integer
        format: int32
      name:
        type: string
      short_comment:
        description: "Team の大会にむけての意気込みコメント"
        type: string
      members:
        type: array
        items:
          $ref: "#/definitions/Member"

  Member:
    type: object
    description: "チーム一覧表示などのAPIではdetailが埋まってることもある"
    required:
      - name
    properties:
      id:
        description: "Member ID (Slack ID かも?)"
        type: integer
        format: int32
      name:
        type: string
      icon:
        description: "Slack icon URL"
        type: string
      detail:
        $ref: "#/definitions/MemberDetail"

  MemberDetail:
    type: object
    properties:
      short_comment:
        description: "一言コメント"
        type: string
      rank_splat_zones:
        description: "A+, X (2401~2500)"
        type: string
      rank_tower_control:
        description: "A+, X (2401~2500)"
        type: string
      rank_rainmaker:
        description: "A+, X (2401~2500)"
        type: string
      rank_clam_blitz:
        description: "A+, X (2401~2500)"
        type: string
      main_weapon:
        description: "メインウェポン/好きなブキ"
        type: string

  Battle:
    description: "バトル。勝敗などは決まってない状態のこともある。"
    type: object
    required:
      - order
    properties:
      id:
        description: "Battle ID"
        type: integer
        format: int64
      winner:
        type: string
        description: "勝者がどちらか。"
        enum:
          - "alpha"
          - "bravo"
      order:
        description: "何戦目か"
        type: integer
        format: int32
      rule:
        $ref: "#/definitions/Rule"
      stage:
        $ref: "#/definitions/Stage"

  Ranking:
    description: "予選ランキング"
    type: object
    properties:
      rankings:
        type: array
        items:
          $ref: "#/definitions/Rank"

  Rank:
    type: object
    required:
      - rank
      - team
      - point
    properties:
      rank:
        description: "順位"
        type: integer
        format: int32
      team:
        description: "member も fill される"
        $ref: "#/definitions/Team"
      point:
        description: "勝ち点"
        type: integer
        format: int32
      omwp:
        description: "OMWP (Opponent Match Win Percentage)"
        type: number
      num_of_matches:
        description: "何戦こなしたか。"
        type: integer
        format: int32

  Teams:
    type: object
    properties:
      teams:
        type: array
        items:
          $ref: "#/definitions/Team"

  Event:
    type: object
    required:
      - name
      - numbering
    properties:
      name:
        type: string
      numbering:
        type: integer
        format: int32
      rules:
        type: array
        items:
          $ref: "#/definitions/Rule"
      stages:
        type: array
        items:
          $ref: "#/definitions/Stage"

  Rule:
    type: object
    required:
      - key
    properties:
      key:
        type: string
        description: "Rule key. ref: https://splatoon2.ink/data/locale/ja.json"
        enum:
          - "turf_war"
          - "splat_zones"
          - "tower_control"
          - "rainmaker"
          - "clam_blitz"
      name:
        description: "Localized rule name."
        type: string

  Stage:
    type: object
    required:
      - id
    properties:
      id:
        description: "Stage ID. ref: https://splatoon2.ink/data/locale/ja.json"
        type: integer
        format: int32
      name:
        description: "Localized stage name."
        type: string

  ReceptionResponse:
    type: object
    properties:
      building:
        description: "ビル入館情報"
        $ref: "#/definitions/ReceptionCode"
      splathon:
        description: "Splathon会場受付情報"
        $ref: "#/definitions/ReceptionCode"

  ReceptionCode:
    type: object
    description: "ビル入館情報/Splathon会場受付情報"
    properties:
      name:
        description: "Splathon会場入場コード/XXXビル入館コード"
        type: string
      description:
        description: "入場の説明"
        type: string
      short_text:
        description: "コードの説明"
        type: string
      qrcode_img:
        description: "Image URL of QR code"
        type: string
      code:
        type: string
      code_type:
        type: string
        enum:
          - "qrcode"
          - "barcode"

  ReceptionPartcipantsDataResponse:
    type: object
    properties:
      description:
        description: "受付の仕方の説明や注意点などのフリーテキスト。"
        type: string
      slack_internal_id:
        description: "参加者の Slack Internal ID"
        type: string
      participants:
        description: "1つのSlackIDで複数の参加者をカバーしている。また
        participants とは別に参加者情報のない同伴者が存在する可能性があり、
        もしいる場合は has_companion flag が true となる"
        type: array
        items:
          $ref: "#/definitions/ParticipantReception"

  ParticipantReception:
    type: object
    required:
      - nickname
      - fullname_kana
      - company_name
      - participant_fee
      - join_party
      - is_staff
      - is_player
      - has_switch_dock
      - has_companion
    properties:
      nickname:
        type: string
        description: "ハンドルネーム。 e.g. みーくん"
      fullname_kana:
        type: string
        description: "カタカナのフルネーム。 e.g. ヤマダタロウ"
      company_name:
        type: string
        description: "所属企業名"
      team_name:
        description: "チーム名"
        type: string
      team_id:
        description: "チームID(一応)"
        type: integer
        format: int64
      participant_fee:
        type: integer
        format: int32
        description: "合計参加費(円)"
      join_party:
        type: boolean
        description: "懇親会に参加するか否か"
      is_staff:
        type: boolean
        description: "スタッフかどうか"
      is_player:
        type: boolean
        description: "playerとして参加するかどうか。falseならスタッフか観戦"
      has_switch_dock:
        type: boolean
        description: "Nintendo Switch doc を持ってきたか"
      has_companion:
        type: boolean
        description: "同伴者がいるかどうか。いる場合は用スプレッドシート確認。"
